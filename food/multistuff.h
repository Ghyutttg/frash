jboolean typeRefToBoolean(CFTypeRef val);
CFTypeRef booleanToTypeRef(jboolean val);
jobject typeRefToObject(CFTypeRef val);
CFTypeRef objectToTypeRef(jobject val);
jchar typeRefToChar(CFTypeRef val);
CFTypeRef charToTypeRef(jchar val);
jchar impl_CallCharMethodA(JNIEnv *env, jobject obj, jmethodID methodID, const jvalue *args);
jchar impl_CallCharMethodV(JNIEnv *env, jobject obj, jmethodID methodID, va_list args);
jchar impl_CallCharMethod(JNIEnv *env, jobject obj, jmethodID methodID, ...);
void impl_SetCharField(JNIEnv *env, jobject obj, jfieldID fieldID, jchar val);
jchar impl_GetCharField(JNIEnv *env, jobject obj, jfieldID fieldID);
jfloat typeRefToFloat(CFTypeRef val);
CFTypeRef floatToTypeRef(jfloat val);
jfloat impl_CallFloatMethodA(JNIEnv *env, jobject obj, jmethodID methodID, const jvalue *args);
jfloat impl_CallFloatMethodV(JNIEnv *env, jobject obj, jmethodID methodID, va_list args);
jfloat impl_CallFloatMethod(JNIEnv *env, jobject obj, jmethodID methodID, ...);
void impl_SetFloatField(JNIEnv *env, jobject obj, jfieldID fieldID, jfloat val);
jfloat impl_GetFloatField(JNIEnv *env, jobject obj, jfieldID fieldID);
jboolean impl_CallBooleanMethodA(JNIEnv *env, jobject obj, jmethodID methodID, const jvalue *args);
jboolean impl_CallBooleanMethodV(JNIEnv *env, jobject obj, jmethodID methodID, va_list args);
jboolean impl_CallBooleanMethod(JNIEnv *env, jobject obj, jmethodID methodID, ...);
void impl_SetBooleanField(JNIEnv *env, jobject obj, jfieldID fieldID, jboolean val);
jboolean impl_GetBooleanField(JNIEnv *env, jobject obj, jfieldID fieldID);
jint typeRefToInt(CFTypeRef val);
CFTypeRef intToTypeRef(jint val);
jint impl_CallIntMethodA(JNIEnv *env, jobject obj, jmethodID methodID, const jvalue *args);
jint impl_CallIntMethodV(JNIEnv *env, jobject obj, jmethodID methodID, va_list args);
jint impl_CallIntMethod(JNIEnv *env, jobject obj, jmethodID methodID, ...);
void impl_SetIntField(JNIEnv *env, jobject obj, jfieldID fieldID, jint val);
jint impl_GetIntField(JNIEnv *env, jobject obj, jfieldID fieldID);
jdouble typeRefToDouble(CFTypeRef val);
CFTypeRef doubleToTypeRef(jdouble val);
jdouble impl_CallDoubleMethodA(JNIEnv *env, jobject obj, jmethodID methodID, const jvalue *args);
jdouble impl_CallDoubleMethodV(JNIEnv *env, jobject obj, jmethodID methodID, va_list args);
jdouble impl_CallDoubleMethod(JNIEnv *env, jobject obj, jmethodID methodID, ...);
void impl_SetDoubleField(JNIEnv *env, jobject obj, jfieldID fieldID, jdouble val);
jdouble impl_GetDoubleField(JNIEnv *env, jobject obj, jfieldID fieldID);
jbyte typeRefToByte(CFTypeRef val);
CFTypeRef byteToTypeRef(jbyte val);
jbyte impl_CallByteMethodA(JNIEnv *env, jobject obj, jmethodID methodID, const jvalue *args);
jbyte impl_CallByteMethodV(JNIEnv *env, jobject obj, jmethodID methodID, va_list args);
jbyte impl_CallByteMethod(JNIEnv *env, jobject obj, jmethodID methodID, ...);
void impl_SetByteField(JNIEnv *env, jobject obj, jfieldID fieldID, jbyte val);
jbyte impl_GetByteField(JNIEnv *env, jobject obj, jfieldID fieldID);
jobject impl_CallObjectMethodA(JNIEnv *env, jobject obj, jmethodID methodID, const jvalue *args);
jobject impl_CallObjectMethodV(JNIEnv *env, jobject obj, jmethodID methodID, va_list args);
jobject impl_CallObjectMethod(JNIEnv *env, jobject obj, jmethodID methodID, ...);
void impl_SetObjectField(JNIEnv *env, jobject obj, jfieldID fieldID, jobject val);
jobject impl_GetObjectField(JNIEnv *env, jobject obj, jfieldID fieldID);
jlong typeRefToLong(CFTypeRef val);
CFTypeRef longToTypeRef(jlong val);
jlong impl_CallLongMethodA(JNIEnv *env, jobject obj, jmethodID methodID, const jvalue *args);
jlong impl_CallLongMethodV(JNIEnv *env, jobject obj, jmethodID methodID, va_list args);
jlong impl_CallLongMethod(JNIEnv *env, jobject obj, jmethodID methodID, ...);
void impl_SetLongField(JNIEnv *env, jobject obj, jfieldID fieldID, jlong val);
jlong impl_GetLongField(JNIEnv *env, jobject obj, jfieldID fieldID);
jshort typeRefToShort(CFTypeRef val);
CFTypeRef shortToTypeRef(jshort val);
jshort impl_CallShortMethodA(JNIEnv *env, jobject obj, jmethodID methodID, const jvalue *args);
jshort impl_CallShortMethodV(JNIEnv *env, jobject obj, jmethodID methodID, va_list args);
jshort impl_CallShortMethod(JNIEnv *env, jobject obj, jmethodID methodID, ...);
void impl_SetShortField(JNIEnv *env, jobject obj, jfieldID fieldID, jshort val);
jshort impl_GetShortField(JNIEnv *env, jobject obj, jfieldID fieldID);
void impl_CallVoidMethodA(JNIEnv *env, jobject obj, jmethodID methodID, const    jvalue *args);
void impl_CallVoidMethodV(JNIEnv *env, jobject obj, jmethodID methodID, va_list  args);
void impl_CallVoidMethod(JNIEnv *env, jobject obj, jmethodID methodID, ...);
